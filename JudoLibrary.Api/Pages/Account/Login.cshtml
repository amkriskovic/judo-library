@page
@model JudoLibrary.Api.Pages.Account.Login

@{
    ViewData["Title"] = "Login";
    Layout = "Shared/_Layout";
}

<form method="post">
    <!-- Value of ReturnUrl get's populated by IS4 when we go to /Account/Login, it get's populated based on ConnectID Flow => callback? -->
    <!-- because we specified this hidden field which OnGet takes that http://localhost:5000/Account/Login?ReturnUrl= everything after it -->
    <!-- and assigns it's to value -->

    <!-- #1 First thing where we redirect to is an endpoint within our IS4 (WHEN WE CLICK ON LOGIN) => "authorization_endpoint" 
    => /connect/authorizewell known info. about IS4 -->

    <!-- #2 If we are authorized we redirect back to our App with [code] that we can exchange for access token and ID token -->
    <input type="hidden" asp-for="Form.ReturnUrl" value="@Model.Form.ReturnUrl">

    <!-- Username field -->
    <div class="field">
        <label>Username</label>
        <input asp-for="Form.Username">
        <span asp-validation-for="Form.Username"></span>
    </div>

    <!-- Password field -->
    <div class="field">
        <label>Password</label>
        <input asp-for="Form.Password">
        <span asp-validation-for="Form.Password"></span>
    </div>

    <!-- If we have any errors in out list of errors -->
    @if (Model.CustomErrors.Count > 0)
    {
        <div class="field">
            @foreach (var error in Model.CustomErrors)
            {
                <div class="error">@error</div>
            }
        </div>
    }

    <!-- Button -->
    <div class="field flex-row">
        <button type="submit">Log In</button>
    </div>

    <hr>

    <div class="field flex-row">
        <!-- Populating -> passing returnUrl if we click  link, Created account which is generated on get -->
        <a asp-page="/Account/Register" asp-route-returnUrl="@Model.Form.ReturnUrl">Created account</a>
    </div>
</form>